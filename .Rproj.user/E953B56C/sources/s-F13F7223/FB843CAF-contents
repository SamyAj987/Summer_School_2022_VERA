rm(list=ls())
load("./Political_Network_ITA.RData")
ls()
require(igraph)
net = graph_from_adjacency_matrix(adjmatrix = Y,mode = "undirected")
X
for(j in 1:NCOL(X)){
	net = net %>% set_vertex_attr(name = colnames(X)[j],value = X[,j])
}
list.vertex.attributes(net)

#V(net)$color = as.factor(X[,2])
degree(net,normalized = T)
D_net = degree(net)

edge_density(net) 
diameter(net)
# Circa il 7% delle connessioni
require(stringr)

which(str_detect(V(net)$party, "Alleanza"))
V(net)[1:9]
shortest_paths(graph = net,from = "ENRICO LETTA",to = "GIORGIA MELONI")
shortest_paths(graph = net,from = "GIUSEPPE CIVATI",to = "GIORGIA MELONI")
shortest_paths(graph = net,from = "GIUSEPPE CIVATI",to = "ENRICO LETTA")
average.path.length(net)

# Il diametro è 5, quindi 4 è abbastanza lontano
#shortest_paths(graph = net,from = "ENRICO LETTA",to = "GIORGIA MELONI")
C_net = closeness(graph = net)
B_net = betweenness(graph = net)

#lattice::levelplot(tt)
#distances(net,1,100)
par(mfrow = c(2,1))
hist(C_net,nclass = 50,main="closeness")
hist(B_net,nclass = 50,main="betweennes")
which.max(C_net)

plot(density((D_net)),main = "distribuzione del grado",lwd= 3)
hist(degree(net), nclass = 25, freq = F,col='gray',add=T)

C_net = closeness(graph = net,normalized = T)
B_net = betweenness(graph = net,normalized = T)

#lattice::levelplot(tt)
#distances(net,1,100)
par(mfrow = c(1,2))
hist(C_net,nclass = 50,main="closeness")
hist(B_net,nclass = 50,main="betweennes")



which.max(C_net)
which.max(B_net)

which.min(C_net)
which.min(B_net)
summary(D_net)

net2 = delete_vertices(net, which(D_net > 100))
plot(net2)

#++++++++++++++
# Primi grafici
#++++++++++++++
V(net)$size = log(degree(net)) + 1
V(net)$label = NA
#V(net)$membership = V(net)$color
plot(net)



#+++++++++++++++++++++++
# Valutazione dei gruppi
#+++++++++++++++++++++++
list.vertex.attributes(net)

modularity(net,factor(V(net)$sex))
assortativity(net,factor(V(net)$sex))

modularity(net,factor(V(net)$party))
assortativity(net,factor(V(net)$party))

set.seed(1)
group = cluster_louvain(graph = net)
#group = cluster_fast_greedy(graph = net)
gr = membership(group)
#modularity(net,gr)
table(gr,V(net)$party)


V(net)$size = sqrt(degree(net))
#V(net)$size = 3
V(net)$shape = "circle"
#str(E(net))

#V(net)$shape = shapes()[as.factor(X[,2])]
v_col = rep("gray", NROW(X))
v_col[str_detect(X[,2],"Lega")] = "darkgreen"
v_col[str_detect(X[,2],"Forza Italia")] = "green"
v_col[str_detect(X[,2],"5 Stelle")] = "yellow"
v_col[str_detect(X[,2],"Partito Democratico")] = "red"
v_col[str_detect(X[,2],"Sinistra Ecologia")] = "orange"
vertex_attr(net)
#v_col
V(net)$color = v_col
#V(net)$color = gr

#V(net)$label = 
#crossing(net)
ll = layout_with_fr(graph = net,niter = 1000)
plot(net,layout = ll,label = NA,mark.groups = lapply(1:max(gr), function(g) which(gr==g)))


ll = layout_with_mds(graph = net)
plot(net,layout = ll,label = NA)

ll = layout_with_kk(graph = net)
plot(net,layout = ll,label = NA)


V(net)$color = gr
plot(net,layout = ll,label = NA)



ll = layout_with_fr(graph = net,niter = 1000)

V(net)$color = v_col
plot(net,layout = ll,label = NA)
V(net)$color = gr
plot(net,layout = ll,label = NA)



table(gr,V(net)$party)
which(gr == 4 & str_detect(V(net)$party, "Democratico"))
which(gr == 3 & str_detect(V(net)$party, "Democratico"))

which(gr == 1 & str_detect(V(net)$party, "Stelle"))
# Rizzetto rieletto con fratelli di italia
which(gr == 1 & str_detect(V(net)$party, "Sinistra"))
# Una di quelle buttate fuori
(str_detect(V(net)$party[gr == 1], "Stelle"))
mixed = which(str_detect(V(net)$party[gr == 2], "Stelle"))
V(net)[mixed]


