load("Datasets/russian_trolls.RData")
library(igraph)
net = graph_from_edgelist(Y,directed = F)
for(j in 1:ncol(X)){
net = net %>%
set_vertex_attr(name = colnames(X)[j],
value = X[,j])
}
V(net)$name = V(net)$vertex.names
net = graph_from_edgelist(Y,directed = F)
load("Datasets/russian_trolls.RData")
library(igraph)
load("Datasets/russian_trolls.RData")
getwd()
load("../Lab02/Datasets/russian_trolls.RData")
load("Lab02/Datasets/russian_trolls.RData")
net = graph_from_edgelist(Y,directed = F)
for(j in 1:ncol(X)){
net = net %>%
set_vertex_attr(name = colnames(X)[j],
value = X[,j])
}
V(net)$name = V(net)$vertex.names
X
head(X)
table(X[,2])
table(X[,1])
X[,c(1:2)]
knitr::kable(tab, format = "html")
# Chunk 1: setup
knitr::opts_chunk$set(echo = T, fig.align = "center", out.width = '80%', warning = F, message = F)
rm(list = ls())
# Chunk 2
load("../Lab02/lab02.RData")
# Chunk 3
library(igraph)
library(ggraph)
# Chunk 4
par(mfrow = c(1,1))
plot(net)
# Chunk 5
V(net)$name[which(B_net < quantile(B_net, .99))] = NA
plot(net,
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
# Chunk 6
plot(net,
vertex.size = .5*log(igraph::betweenness(net)+1),
vertex.color = as.numeric(factor(aType)),
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
# Chunk 7
V(net)$label = V(net)$name
V(net)$label[which(B_net < quantile(B_net, .99))] = NA
V(net)$label.color = "black"
V(net)$size = .5*log(igraph::betweenness(net)+1)
V(net)$color = as.numeric(factor(aType))
E(net)$arrow.size<-.2
E(net)$edge.color<-"gray80"
load("Lab02/lab02.RData")
net.bg <- sample_(net)
net.bg <- sample_(net, n = 500)
net.bg <- igraph::sample_(net, n = 500)
par(mfrow=c(1,2)) # Community detection (by optimizing modularity over partitions):
clp <- cluster_optimal(net)
knitr::opts_chunk$set(echo = T, fig.align = "center", out.width = '80%', warning = F, message = F)
rm(list = ls())
load("../Lab02/lab02.RData")
load("Lab02/lab02.RData")
library(igraph)
library(ggraph)
par(mfrow = c(1,1))
plot(net)
V(net)$name[which(B_net < quantile(B_net, .99))] = NA
plot(net,
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
plot(net,
vertex.size = .5*log(igraph::betweenness(net)+1),
vertex.color = as.numeric(factor(aType)),
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
V(net)$label = V(net)$name
V(net)$label[which(B_net < quantile(B_net, .99))] = NA
V(net)$label.color = "black"
V(net)$size = .5*log(igraph::betweenness(net)+1)
V(net)$color = as.numeric(factor(aType))
E(net)$arrow.size<-.2
E(net)$edge.color<-"gray80"
llMDS = layout_with_mds(net)
plot(net,layout= llMDS)
set.seed(1)
llFR = layout_with_fr(net,niter = 5000)
plot(net,layout= llFR)
l <- layout_with_fr(net, niter=5000)
par(mfrow=c(2,2), mar=c(0,0,0,0)) # plot four figures- 2 rows, 2 columns
plot(net, layout=layout_with_fr)
plot(net, layout=layout_with_fr)
plot(net, layout=l)
plot(net, layout=l)
set.seed(1)
llKK = layout_with_kk(net,dim = 2,maxiter = 100*vcount(net))
plot(net,layout= llKK)
par(mfrow= c(1,1))
set.seed(1)
llKK = layout_with_kk(net,dim = 2,maxiter = 100*vcount(net))
plot(net,layout= llKK)
l <- layout_with_graphopt(net)
plot(net, layout=l)
l1 <- layout_with_graphopt(net, charge=0.02)
l2 <- layout_with_graphopt(net, charge=0.00000001)
par(mfrow=c(1,2), mar=c(1,1,1,1))
plot(net, layout=l1)
plot(net, layout=l2)
dev.off()
l1 <- layout_with_graphopt(net, charge=0.02)
l2 <- layout_with_graphopt(net, charge=0.00000001)
par(mfrow=c(1,2), mar=c(1,1,1,1))
plot(net, layout=l1)
plot(net, layout=l2)
par(mfrow=c(1,1))
graph_attr(net,"layout")<-layout_with_lgl
plot(net)
layouts <- grep("layout_", ls("package:igraph"), value=TRUE)[-c(1:2)]
layouts <- layouts[!grepl("bipartite|merge|norm|sugiyama|tree", layouts)]
par(mfrow=c(3,3), mar=c(1,1,1,1))
for(layout in layouts){
print(layout)
l <- do.call(layout, list(net))
plot(net, edge.arrow.mode=0, layout=l, main=layout)
}
layouts <- grep("layout_", ls("package:igraph"), value=TRUE)[-c(1:2)]
layouts <- layouts[grepl("attr|graphopt|with_kk|with_fr|with_mds", layouts)]
layouts
par(mfrow=c(2,2), mar=c(1,1,1,1))
for(layout in layouts){
print(layout)
l <- do.call(layout, list(net))
plot(net, edge.arrow.mode=0, layout=l, main=layout)
}
library(ggraph)
library(igraph)
ggraph(net) +
geom_edge_link(color = "gray70") +
geom_node_point(color = V(net)$color) +
theme_minimal()
library(tidygraph)
df = as_tbl_graph(net)
df %>% mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE, color="gray70") +
geom_node_point(aes(colour = aType, size= btw), show.legend=T) +
geom_node_label(aes(label=label))+
scale_size(guide="none") +
theme_graph(base_family='sans') +
theme(legend.position = "bottom") +
library(tidygraph)
df = as_tbl_graph(net)
df %>% mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE, color="gray70") +
geom_node_point(aes(colour = aType, size= btw), show.legend=T) +
geom_node_label(aes(label=label))+
scale_size(guide="none") +
theme_graph(base_family='sans') +
theme(legend.position = "bottom")
library(tidygraph)
df = as_tbl_graph(net)
df %>% mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE, color="gray70") +
geom_node_point(aes(colour = aType, size= btw), show.legend=T) +
geom_node_label(aes(label=label))+
scale_size(guide="none") +
theme_graph(base_family='sans') +
theme(legend.position = "bottom")
library(tidygraph)
df = as_tbl_graph(net)
df %>% mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE, color="gray70") +
geom_node_point(aes(colour = aType, size= btw), show.legend=T) +
geom_node_label(aes(label=label))+
scale_size(guide="none") +
theme_graph(base_family='sans') +
theme(legend.position = "bottom")
groupL = as.character(membership(gr))
table(groupL)
groupL[groupL %in% c(10,7,9, 11, 4)] = 4
groupL[groupL %in% c(8)] = 7
table(groupL, aType)
groupL = str_replace(groupL, "1$", "Russian")
groupL = str_replace(groupL, "2", "Right")
groupL = str_replace(groupL, "3", "Russian2")
groupL = str_replace(groupL, "4", "Other")
groupL = str_replace(groupL, "5", "Left")
groupL = str_replace(groupL, "6", "Hashtager")
groupL = str_replace(groupL, "7", "German")
library(stringr)
library(stringr)
table(groupL, aType)
groupL = str_replace(groupL, "1$", "Russian")
groupL = str_replace(groupL, "2", "Right")
groupL = str_replace(groupL, "3", "Russian2")
groupL = str_replace(groupL, "4", "Other")
groupL = str_replace(groupL, "5", "Left")
groupL = str_replace(groupL, "6", "Hashtager")
groupL = str_replace(groupL, "7", "German")
assortativity(net, as.factor(groupL))
df = as_tbl_graph(net)
df %>% mutate(btw= 10*log(centrality_betweenness() + 1)) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE,color="gray") +
geom_node_point(aes(colour = gruppiL,size= btw),alpha =
1,show.legend=T) +
geom_node_label(aes(label=label))+
theme_graph(base_family='sans') +
scale_size(guide="none") +
theme(legend.position = "bottom")
df = as_tbl_graph(net)
df %>% mutate(btw= 10*log(centrality_betweenness() + 1)) %>%
ggraph(layout="fr") +
geom_edge_link(show.legend = FALSE,color="gray") +
geom_node_point(aes(colour = groupL,size= btw),alpha =
1,show.legend=T) +
geom_node_label(aes(label=label))+
theme_graph(base_family='sans') +
scale_size(guide="none") +
theme(legend.position = "bottom")
V(net)$better_gr = groupL
df = as_tbl_graph(net)
df = df %>% activate(edges) %>%
mutate(e_col = ifelse(.N()$better_gr[to]
== .N()$better_gr[from], .N()$better_gr[from], NA))
df %>%
activate(nodes) %>%
mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(aes(color=e_col),alpha=.7,show.legend = FALSE) +
geom_node_point(aes(colour = gruppiL,size= btw),show.legend=T) +
geom_node_label(aes(label=label))+
theme_graph(base_family='sans') +
theme(legend.position = "bottom") +
scale_size(guide="none") +
scale_edge_color_discrete(guide="none")
V(net)$better_gr = groupL
df = as_tbl_graph(net)
df = df %>% activate(edges) %>%
mutate(e_col = ifelse(.N()$better_gr[to]
== .N()$better_gr[from], .N()$better_gr[from], NA))
df %>%
activate(nodes) %>%
mutate(btw= centrality_betweenness()) %>%
ggraph(layout="fr") +
geom_edge_link(aes(color=e_col),alpha=.7,show.legend = FALSE) +
geom_node_point(aes(colour = groupL,size= btw),show.legend=T) +
geom_node_label(aes(label=label))+
theme_graph(base_family='sans') +
theme(legend.position = "bottom") +
scale_size(guide="none") +
scale_edge_color_discrete(guide="none")
library(ergm)
load("../Lab02/lab02.RData")
load("Lab02/lab02.RData")
knitr::opts_chunk$set(echo = T, fig.align = "center", out.width = '80%', warning = F, message = F)
rm(list = ls())
#load("Lab02/lab02.RData")
library(igraph)
library(ggraph)
par(mfrow = c(1,1))
plot(net)
knitr::opts_chunk$set(echo = T, fig.align = "center", out.width = '80%', warning = F, message = F)
rm(list = ls())
#load("Lab02/lab02.RData")
#load("Lab02/lab02.RData")
```
load("Lab02/lab02.RData")
library(igraph)
library(ggraph)
par(mfrow = c(1,1))
plot(net)
V(net)$name[which(B_net < quantile(B_net, .99))] = NA
plot(net,
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
B_net
B_net == igraph::betweennessnet()
B_net == igraph::betweenness(net)
plot(net,
vertex.size = igraph::betweenness(net),
vertex.color = as.numeric(factor(aType)),
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
igraph::betweenness(net)
B_net
plot(net,
vertex.size = B_net + 1,
vertex.color = as.numeric(factor(aType)),
vertex.label=V(net)$name,
vertex.label.color = "black",
edge.color="grey",
vertex.color="orange",
vertex.frame.color="#ffffff",
main = "3 million Russian troll tweets")
V(net)$label = V(net)$name
V(net)$label[which(B_net < quantile(B_net, .99))] = NA
V(net)$label.color = "black"
V(net)$size = .5*log(igraph::betweenness(net)+1)
V(net)$color = as.numeric(factor(aType))
E(net)$arrow.size<-.2
E(net)$edge.color<-"gray80"
plot(net)
plot(net)
set.seed(1234)
plot(net)
set.seed(1234)
plot(net)
clp <- cluster_louvain(net)
clp
clp <- cluster_louvain(graph = net)
clp
table(clp)
table(clp$memberships)
table(clp$memberships, aType)
AType
aType
length(clp)
length(clp$memberships)
length(aType)
length(gr)
length(gr$memberships)
gr$memberships
table(gr$memberships)
class(gr)
membership(gr)
modularity(gr)
table(membership(gr))
assortativity(net,membership(gr))
edge_density(graph = net)
head(X)
head(Y)
assortativity(gr)
Y
X
plot(gr, net)
gr$membership
unique(gr$membership)
colors()
colors()[1:11]
colrs <- adjustcolor(sample(colors(),11), alpha=.6)
colrs
V(net)$community <- gr$membership
plot(net, vertex.color=colrs[V(net)$community])
table(aType)
dist.from.Russian <- distances(net, v=V(net)[aType=="Russian"], to=V(net), weights=NA)
oranges<-colorRampPalette(c("darkred","gold"))
col<-oranges(max(dist.from.NYT)+1)
col<-oranges(max(dist.from.Russian)+1)
col<-col[dist.from.Russian+1] plot(net,vertex.color=col,vertex.label=dist.from.NYT,edge.arrow.size=.6, vertex.label.color="white")
col<-col[dist.from.Russian+1] plot(net,vertex.color=col,vertex.label=dist.from.Russian,edge.arrow.size=.6, vertex.label.color="white")
col<-col[dist.from.Russian+1] plot(net,vertex.color=col,vertex.label=dist.from.Russian,edge.arrow.size=.6, vertex.label.color="white")
plot(net,vertex.color=col,vertex.label=dist.from.Russian,edge.arrow.size=.6, vertex.label.color="white")
dist.from.Russian
V(net)[aType=="Russian"]
summary(V(net)[aType=="Russian"])
out <-V(net)[aType=="Russian"]
str(out)
right.path<-shortest_paths(net,
from=V(net)[aType=="Russian"],
to=V(net)[aType=="Right"],
output="both")
ecol<-rep("gray80",ecount(net))
ecol[unlist(right.path$epath)]<-"orange"
ew<-rep(2,ecount(net))
ew[unlist(right.path$epath)]<-4
vcol<-rep("gray40",vcount(net))
vcol[unlist(right.path$vpath)]<-"gold"
plot(net,
vertex.color=vcol,
edge.color=ecol,
edge.width=ew,edge.arrow.mode=0)
inc.edges <- incident(net, V(net)[aType=="Left"], mode="all")
inc.edges
inc.edges <- incident(net, V(net)[aType=="Russian"], mode="all")
inc.edges
inc.edges <- incident(net, V(net)[aType=="Right"], mode="all")
inc.edges
inc.edges <- incident(net, V(net)[aType=="Left"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$media=="Wall Street Journal"] <- "gold"
plot(net,
vertex.color=vcol,
edge.color=ecol)
inc.edges <- incident(net, V(net)[aType=="Right"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$media=="Wall Street Journal"] <- "gold"
plot(net,
vertex.color=vcol,
edge.color=ecol)
inc.edges <- incident(net, V(net)[aType=="Left"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$aType=="Left"] <- "gold"
plot(net,
vertex.color=vcol,
edge.color=ecol)
inc.edges <- incident(net, V(net)[aType=="Right"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$aType=="Right"] <- "gold"
plot(net,
vertex.color=vcol,
edge.color=ecol)
vcol
vcol[V(net)$aType=="Right"]
vcount(net)
ecount(net)
V(net)[aType=="Right"]
table(aType)
inc.edges <- incident(net, V(net)[aType=="News"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$aType=="News"] <- "gold"
plot(net,
vertex.color=vcol,
edge.color=ecol)
vcol
vcol[V(net)$aType=="News"]
aType
V(net)
dist.from.Russian <- distances(net, v=V(net)[aType=="Russian"], to=V(net), weights=NA)
dist.from.Russian
unique(dist.from.Russian)
dim(dist.from.Russian)
dim(V(net))
length(V(net))
head(dist.from.Russian)
View(dist.from.Russian)
V(net)[aType=="Russian"]
unique(V(net)[aType=="Russian"])
length(V(net))
length(V(net)[aType=="Russian"])
dist.from.Russian <- distances(net, v=V(net)[aType=="Russian"], to=V(net)[aType=="Russian"], weights=NA)
dim(dist.from.Russian)
oranges<-colorRampPalette(c("darkred","gold"))
col<-oranges(max(dist.from.Russian)+1)
col
col<-col[dist.from.Russian+1]
plot(net,
vertex.color=col,
vertex.label=dist.from.Russian,
edge.arrow.size=.6,
vertex.label.color="white")
dist.from.Russian <- distances(net, v=V(net)[aType=="Russian"], to=V(net), weights=NA)
dist.from.Russian <- distances(net, v=V(net)[aType=="Russian"], to=V(net), weights=NA, directed = FALSE)
oranges<-colorRampPalette(c("darkred","gold"))
oranges
col<-oranges(max(dist.from.Russian)+1)
col
col<-col[dist.from.Russian+1]
col
col<-oranges(max(dist.from.Russian)+1)
length(col)
col<-col[dist.from.Russian+1]
length(col)
col
col
col<-oranges(max(dist.from.Russian)+1)
plot(net,
vertex.color=col,
vertex.label=dist.from.Russian,
edge.arrow.size=.6,
vertex.label.color="white")
plot(net,
vertex.color=col,
vertex.label=dist.from.Russian)
vertex.color=col,
vertex.label=dist.from.Russian)
out <- sample_pa(100)
